// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/say_hi.proto

package endpoint

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HiReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HiReq) Reset()         { *m = HiReq{} }
func (m *HiReq) String() string { return proto.CompactTextString(m) }
func (*HiReq) ProtoMessage()    {}
func (*HiReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ca84893e94e8484, []int{0}
}

func (m *HiReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiReq.Unmarshal(m, b)
}
func (m *HiReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiReq.Marshal(b, m, deterministic)
}
func (m *HiReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiReq.Merge(m, src)
}
func (m *HiReq) XXX_Size() int {
	return xxx_messageInfo_HiReq.Size(m)
}
func (m *HiReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HiReq.DiscardUnknown(m)
}

var xxx_messageInfo_HiReq proto.InternalMessageInfo

func (m *HiReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HiResp struct {
	Echo                 string   `protobuf:"bytes,2,opt,name=echo,proto3" json:"echo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HiResp) Reset()         { *m = HiResp{} }
func (m *HiResp) String() string { return proto.CompactTextString(m) }
func (*HiResp) ProtoMessage()    {}
func (*HiResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ca84893e94e8484, []int{1}
}

func (m *HiResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiResp.Unmarshal(m, b)
}
func (m *HiResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiResp.Marshal(b, m, deterministic)
}
func (m *HiResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiResp.Merge(m, src)
}
func (m *HiResp) XXX_Size() int {
	return xxx_messageInfo_HiResp.Size(m)
}
func (m *HiResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HiResp.DiscardUnknown(m)
}

var xxx_messageInfo_HiResp proto.InternalMessageInfo

func (m *HiResp) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

func init() {
	proto.RegisterType((*HiReq)(nil), "endpoint.HiReq")
	proto.RegisterType((*HiResp)(nil), "endpoint.HiResp")
}

func init() { proto.RegisterFile("proto/say_hi.proto", fileDescriptor_4ca84893e94e8484) }

var fileDescriptor_4ca84893e94e8484 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4e, 0xac, 0x8c, 0xcf, 0xc8, 0xd4, 0x03, 0x73, 0x84, 0x38, 0x52, 0xf3, 0x52,
	0x0a, 0xf2, 0x33, 0xf3, 0x4a, 0xa4, 0x64, 0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0x13, 0x0b,
	0x32, 0xf5, 0x13, 0xf3, 0xf2, 0xf2, 0x4b, 0x12, 0x4b, 0x32, 0xf3, 0xf3, 0x8a, 0x21, 0xea, 0x94,
	0xa4, 0xb9, 0x58, 0x3d, 0x32, 0x83, 0x52, 0x0b, 0x85, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53,
	0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x19, 0x2e, 0x36, 0x90, 0x64, 0x71,
	0x01, 0x48, 0x36, 0x35, 0x39, 0x23, 0x5f, 0x82, 0x09, 0x22, 0x0b, 0x62, 0x1b, 0x79, 0x71, 0xb1,
	0x06, 0x27, 0x56, 0x7a, 0x64, 0x0a, 0x39, 0xc2, 0x18, 0xfc, 0x7a, 0x30, 0x5b, 0xf5, 0xc0, 0x86,
	0x4a, 0x09, 0xa0, 0x0a, 0x14, 0x17, 0x28, 0x89, 0x36, 0x5d, 0x7e, 0x32, 0x99, 0x89, 0x5f, 0x89,
	0x0b, 0xec, 0x9e, 0xe2, 0xc4, 0xca, 0x8c, 0x4c, 0x2b, 0x46, 0xad, 0x24, 0x36, 0xb0, 0x6b, 0x8c,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0a, 0xa2, 0x18, 0x11, 0xcb, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SayHiClient is the client API for SayHi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SayHiClient interface {
	SayHi(ctx context.Context, in *HiReq, opts ...grpc.CallOption) (*HiResp, error)
}

type sayHiClient struct {
	cc *grpc.ClientConn
}

func NewSayHiClient(cc *grpc.ClientConn) SayHiClient {
	return &sayHiClient{cc}
}

func (c *sayHiClient) SayHi(ctx context.Context, in *HiReq, opts ...grpc.CallOption) (*HiResp, error) {
	out := new(HiResp)
	err := c.cc.Invoke(ctx, "/endpoint.SayHi/SayHi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SayHiServer is the server API for SayHi service.
type SayHiServer interface {
	SayHi(context.Context, *HiReq) (*HiResp, error)
}

// UnimplementedSayHiServer can be embedded to have forward compatible implementations.
type UnimplementedSayHiServer struct {
}

func (*UnimplementedSayHiServer) SayHi(ctx context.Context, req *HiReq) (*HiResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHi not implemented")
}

func RegisterSayHiServer(s *grpc.Server, srv SayHiServer) {
	s.RegisterService(&_SayHi_serviceDesc, srv)
}

func _SayHi_SayHi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HiReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SayHiServer).SayHi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/endpoint.SayHi/SayHi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SayHiServer).SayHi(ctx, req.(*HiReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SayHi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "endpoint.SayHi",
	HandlerType: (*SayHiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHi",
			Handler:    _SayHi_SayHi_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/say_hi.proto",
}
